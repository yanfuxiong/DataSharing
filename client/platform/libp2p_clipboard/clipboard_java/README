# how to generate aab for play store
1.open android studio>build>Generate Signed App Bundle or APK
2.Select Android App Bundle > Next
3.Enter Below data > Next
Key store path: select data_sharing\clipboard_java\rtkcrossshare.jks
Key store password: rtkap1123
Key alias: crossshare
Key password: rtkap1123
4.set Destination Folder "data_sharing\clipboard_java\app" > select "release" >Create
result:
app-release.aab in data_sharing\clipboard_java\app\release

# notes in TSTAT-128
build steps
- step1: set window build enviroment to fix build fail
  - replace "data_sharing/third-party/github.com/grandcat/zeroconf\@v1.0.0/client.go"
    to "C:\Users\nutnq\go\pkg\mod\github.com\grandcat\zeroconf@v1.0.0/client.go"
  - ./build_android.sh
  - result: client/platform/libp2p_clipboard/libp2p_clipboard-sources.jar and
     client/platform/libp2p_clipboard/libp2p_clipboard.aar
- step2: build apk
  - copy above 2 files to clipboard_java/app/libs/
  - build android apk in android studio
  - result: app\build\outputs\apk\debug\app-debug.apk

test steps
- step0: if your phone use USB-C1 in viewmanager,put
  - /storage/emulated/0/Android/data/com.rtk.crossshare/files/ID.SrcAndPort
  - payload is "13,0"
  - note: USB-C2 is "13, 1" and Miracast is "12,9"
- step1: open viewmanager>"X">"Device ID", qr code is showed
- step2: open phone camera to scan above qr code
- result: you will see other connection

# test in  [TSTAS-12][CrossShare][Fix]: Support cross-platform APP: selinux problem
- Build steps for APK:
- Put thirty-party/github.com/ files to overlay your local codes* ex.
  C:\Users\nutnq\go\pkg\mod\github.com\libp2p\
- *: please aware your version, ex. I uses go-libp2p@v0.37.0, you must overlay mdns.go under it
- Enter data_sharing/ and open "Git Bash" and run "./build_android.sh" in windows
- Put above jar into libs/ and open android studio
- File>Open>select "clipboard_java"
- Build>"Rebuild Project"
- resuit: app\build\outputs\apk\debug\app-debug.apk

- Build steps for client_windows.exe:
- Enter data_sharing/ and open "Windows PowerShell" and run "build_windows.ps1" in windows

- Open android selinux steps: (optional)
- (Android) adb shell
- (Android) su
- (Android) setEnforce 1
- (Android) getEnforce
- (Android) result: Enforing

- Test text/file/file transfer ok

# test in [TSTAS-12][Libp2p][Feat]: Support cross-platform APP 1121
- Follow README to build jar by mobilego
- Put above jar into libs/ and build APK with android studio
- PC and android connect 'same' wifi

- Test1: pc > android
- (PC) Execute windows_clipboard.exe and client_windows.exe
- (Android) Execute app (launch app will connect automatically)
- (PC) Select a file to transfer by using windows_clipboard.exe
- (Android) Prompt dialog is showed and press "receive"
- (Android) UI goes to TestGoLib and show a progess bar
- (Android) Go to 3rd party app ex. Files, go to Download folder, you can see that file

- Test2: android > pc
- (PC) Execute windows_clipboard.exe and client_windows.exe
- (Android) Go to 3rd party app ex. Files, long press and select "share" icon and then select "TestGoLib"
- (Android) UI goes to TestGoLib, select an ip and press "COPY"
- (PC) Prompt dialog is showed and press "receive"

# test in [TSTAS-12][Libp2p][Feat]: Support cross-platform APP 1106
- Follow README to build jar by mobilego
- Put above jar into libs/ and build APK with android studio
- PC and android connect 'same' wifi

- Test1: pc > android
- (PC) Execute client.exe
- (Android) Execute app (launch app will connect automatically)
- (PC) Press right key on test.mp4 and select "COPY" in drop-down list
- (Android) Prompt dialog is showed and press "receive"
- (Android shell) Check test.mp4 in /storage/emulated/0/Android/data/com.rtk.myapplication/files/ with different name

- Test2: pc > android
- (PC) Execute client.exe and check ip and port
- (Android Studio) Write above info to String cliendid = "192.168.22.211:1518"; in TestActivity.java
- (Android shell) enter /storage/emulated/0/Android/data/com.rtk.myapplication/files and rename transfer file's filename to "log.txt"
- (Android) Press "Write Provider(.." button
- (PC) Prompt dialog is showed and press "receive"

# Steps to generate jar for android (Window)

1,
cd C:\Users\nutnq\p2p\1028\data_sharing_patch6\data_sharing and  HEAD is
https://mm2sd.rtkbf.com/gerrit/c/kernel/rtk_aosp/device/realtek/native_app/data_sharing/+/455895
patch6 and change mdns port to 23456

2.
Use net.go from data_sharing1028.zip
and overlay local net.go  ex.
C:\Users\nutnq\go\pkg\mod\github.com\multiformats\go-multiaddr@v0.13.0\net\net.go

3.
cd C:\Users\nutnq\p2p\1028\data_sharing_patch6\data_sharing\client\platform\libp2p_clipboard
gomobile bind -target=android -androidapi 21 -ldflags "-checklinkname=0"

